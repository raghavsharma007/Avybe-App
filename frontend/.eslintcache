[{"/app/frontend/src/index.js":"1","/app/frontend/src/reportWebVitals.js":"2","/app/frontend/src/App.js":"3","/app/frontend/src/containers/HomePage.jsx":"4","/app/frontend/src/containers/LoginPage.jsx":"5","/app/frontend/src/components/PrivateRoute.jsx":"6","/app/frontend/src/components/Edit.Profile.jsx":"7","/app/frontend/src/components/Form.jsx":"8"},{"size":517,"mtime":1607763058257,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1607763058258,"results":"11","hashOfConfig":"10"},{"size":540,"mtime":1607856808665,"results":"12","hashOfConfig":"10"},{"size":4136,"mtime":1607858306462,"results":"13","hashOfConfig":"14"},{"size":1042,"mtime":1607851806179,"results":"15","hashOfConfig":"14"},{"size":356,"mtime":1607856992317,"results":"16","hashOfConfig":"14"},{"size":4304,"mtime":1607857871681,"results":"17","hashOfConfig":"14"},{"size":3481,"mtime":1607857474952,"results":"18","hashOfConfig":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r2ho7j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"ivskmq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},"/app/frontend/src/index.js",[],"/app/frontend/src/reportWebVitals.js",[],"/app/frontend/src/App.js",[],"/app/frontend/src/containers/HomePage.jsx",["41","42"],"import React, { useState, useEffect } from 'react';\r\nimport Logo from '../assets/images/logo.png';\r\nimport { EditProfile } from '../components/Edit.Profile';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport BG from '../assets/images/neon-circle.png';\r\nimport axios from 'axios';\r\n\r\nexport const HomePage = () => {\r\n    const history = useHistory();\r\n    const [toggleProfile, setToggleProfile] = useState(false);\r\n    const [toggleModel, setToggleModel] = useState(false);\r\n\r\n    const accessToken = localStorage.getItem('access');\r\n    const username = localStorage.getItem('username');\r\n\r\n    const [getNickname, setGetNickname] = useState('');\r\n    const [getProfilePic, setGetProfilePic] = useState('');\r\n    useEffect(() => {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `Bearer ${accessToken}`\r\n            }\r\n        }\r\n        axios.get('http://localhost:8000/api/account/profile/', {params: {username: username}}, config)\r\n        .then(res => {\r\n            setGetNickname(res.data.nickname);\r\n            setGetProfilePic(res.data.profile_pic);\r\n        })\r\n        .catch(err => {console.log(err)})\r\n    }, [getProfilePic])\r\n    \r\n    const dropdown = (e) => {\r\n        const id = e.target.dataset.id;\r\n        if(id){\r\n            const dropdownDiv = document.querySelector(`#${id}`);\r\n            setToggleProfile(!toggleProfile);\r\n            !toggleProfile \r\n            ? dropdownDiv.classList.remove('hidden') \r\n            : dropdownDiv.classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    const modelOn = (e) => {\r\n        setToggleModel(true);\r\n        setToggleProfile(false);\r\n        document.querySelector(`#profile`).classList.add('hidden');\r\n    }\r\n\r\n    \r\n    const modelOff = (e) => {\r\n        e.preventDefault();\r\n        setToggleModel(false);\r\n    }\r\n\r\n    const logoutUser = (e) => {\r\n        localStorage.removeItem('access');\r\n        localStorage.removeItem('username');\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"flex p-8 items-center\">\r\n                <div className=\"flex-1 flex items-center\">\r\n                    <img src={Logo} alt=\"logo\" className=\"w-16 h-16\" />\r\n                    <p className=\"text-2xl pl-4\">Assignment</p>\r\n                </div>\r\n                <div className=\"relative\">\r\n                    <ul className=\"flex gap-10 items-center\">\r\n                        <li className=\"capitalize\">{username}</li>\r\n                        <li className=\"flex items-center cursor-pointer\" onClick={dropdown} data-id=\"profile\">\r\n                            <div className=\"profile-img overflow-hidden mr-2\">\r\n                                <img src={getProfilePic} alt=\"profile\" className={`w-full h-full`}/>\r\n                            </div>\r\n                            <i className=\"fas fa-chevron-down\"></i>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"absolute bg-gray-800 rounded-lg hidden\" style={{right: '0px', top: '4rem'}} id=\"profile\">\r\n                        <li onClick={modelOn} className=\"py-2 px-8 cursor-pointer\">Edit Profile</li>\r\n                        <li onClick={logoutUser} className=\"py-2 px-8 cursor-pointer relative z-10\">Logout</li>\r\n                    </ul>\r\n                </div>\r\n            </header>\r\n\r\n            <div>\r\n                {\r\n                    toggleModel && <EditProfile modelOff={modelOff} setGetNickname={setGetNickname} setGetProfilePic={setGetProfilePic}/> \r\n                }\r\n\r\n                <section className=\"px-8 flex justify-center h-full relative\" \r\n                    style={{\r\n                        height: 'calc(100vh - 8rem)', \r\n                        backgroundImage: `url(${BG})`\r\n                    }}>\r\n                    <div className=\"mt-16 text-center\">\r\n                        <p className=\"text-2xl font-medium\">Welcome to the Assignment</p>\r\n                        <p className=\"text-2xl font-semibold\">{getNickname}!</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",["43","44"],"/app/frontend/src/containers/LoginPage.jsx",["45","46"],"import React, { useEffect, useState } from 'react';\r\nimport Logo from '../assets/images/logo.png';\r\nimport { Form } from '../components/Form';\r\n\r\n\r\nexport const LoginPage = (props) => {\r\n    return (\r\n        <div className=\"md:flex h-screen\">            \r\n            <section className=\"md:flex-1 px-8 left-container\">\r\n                <div className=\"flex items-center py-8 absolute\">\r\n                    <img src={Logo} alt=\"logo\" className=\"w-16 h-16\" />\r\n                    <p className=\"text-2xl pl-4\">Assignment</p>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col justify-center h-full\">\r\n                    <h1 classettingdsName=\"text-4xl leading-snug\" style={{marginBottom: '-1rem'}}>Explore the unseen exclusively on</h1>\r\n                    <p className=\"font-bold yeseva-one avybe-title\" style={{fontSize: \"8rem\"}}>Avybe</p>\r\n                </div>\r\n            </section>\r\n            <section className=\"md:flex-1 px-8\">\r\n                <Form />\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","/app/frontend/src/components/PrivateRoute.jsx",["47"],"import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route \r\n        {...rest}\r\n        render={props => !(localStorage.getItem('access')) ? (<Redirect to='/login' />) : (<Component{...props} />)}\r\n    \r\n    />\r\n)\r\n\r\nexport default PrivateRoute;","/app/frontend/src/components/Edit.Profile.jsx",["48"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const EditProfile = ({ modelOff, setGetNickname, setGetProfilePic }) => {\r\n    const [nickname, setNickname] = useState('');\r\n    const [profileImageName, setProfileImageName] = useState('');\r\n    const [profilePic, setProfilePic] = useState(null);\r\n    const [toggleAlert, setToggleAlert] = useState(false);\r\n\r\n    const accessToken = localStorage.getItem('access');\r\n    const username = localStorage.getItem('username');\r\n\r\n    const handleInput = (e) => {\r\n        const val = e.target.name;\r\n        if(val === 'nickname'){\r\n            setNickname(e.target.value);\r\n        }else{\r\n            const fileVal = e.target.files[0];\r\n            setProfileImageName(fileVal.name);\r\n            setProfilePic(fileVal);\r\n        }\r\n    }\r\n\r\n    const updateProfile = (e) => {\r\n        e.preventDefault();\r\n        const uploadData = new FormData();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        uploadData.append('username', username);\r\n        uploadData.append('nickname', nickname);\r\n        if (profilePic){\r\n            uploadData.append('file', profilePic, profilePic.name);\r\n        }\r\n        axios.post('http://localhost:8000/api/account/profile/', uploadData, config)\r\n        .then(res => {\r\n            setGetNickname(nickname);\r\n            setGetProfilePic(profilePic);\r\n            setNickname('');\r\n            setProfilePic(null);\r\n            setToggleAlert(true);\r\n\r\n            setTimeout(() => {\r\n                setToggleAlert(false);\r\n                modelOff(e);\r\n            }, 2000);\r\n            \r\n        })\r\n        .catch(err => {console.log(err)})\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-1/2 absolute bg-gray-900 p-8 rounded-lg z-10\" style={{top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n            <form action=\"\" className=\"\" id=\"editProfile\" onSubmit={updateProfile} content-type=\"multipart/form-data\">\r\n                <h1 className=\"text-4xl font-medium\">Edit Profile</h1>\r\n                <div className=\"mt-6\">\r\n                        <div className=\"border border-gray-200 rounded-lg flex flex-col py-2 px-4\">\r\n                            <label htmlFor=\"\" className=\"text-sm\">Nickname</label>\r\n                            <input type=\"text\" name=\"nickname\" value={nickname} onInput={handleInput} className=\"h-8 py-2 inputField\" autoComplete=\"off\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                        <div className=\"w-full border border-gray-200 rounded-lg inline-flex flex-col py-2 px-4 relative\">\r\n                            <label htmlFor=\"\" className=\"text-sm\">Profile</label>\r\n                            <div className=\"relative\">\r\n                                <input type=\"file\" name=\"profilePic\" onChange={handleInput} className=\"opacity-0 absolute top-0 right-0 left-0 bottom-0\"/>\r\n                                <div className=\"flex\">\r\n                                    <input type=\"text\" value={profileImageName} placeholder=\"Choose a profile picture\" className=\"flex-1 h-8 py-2 inputField \" disabled/>\r\n                                    {/* <div className=\"profile-img\">\r\n                                        <img src={profilePic} alt=\"profile-pic\" className={`${!profilePic && 'hidden'}`}/>\r\n                                    </div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-4 flex gap-10\">\r\n                        <button className=\"btn--primary rounded-lg w-1/2\">Update</button>\r\n                        <button className=\"btn--secondary rounded-lg w-1/2\" onClick={modelOff}>Cancel</button>\r\n                    </div>\r\n            </form>\r\n            \r\n            {\r\n                toggleAlert && (\r\n                    <div className=\"bg-green-700 p-4 inline-block rounded-lg absolute\" style={{top: '-120px', right: '-40%'}}>\r\n                        <p className=\"\">Profile updated successfully</p>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    \r\n    )\r\n}\r\n","/app/frontend/src/components/Form.jsx",["49","50"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nexport const Form = () => {\r\n    const history = useHistory();\r\n    const [passEye, setPassEye] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [tokenError, setTokenError] = useState(false);\r\n\r\n\r\n    const passEyeFunction = (e) => {\r\n        const passInput = e.target.previousElementSibling;\r\n        setPassEye(!passEye);\r\n        if(!passEye){\r\n            passInput.type = 'text';\r\n        }else{\r\n            passInput.type = 'password';\r\n        }\r\n    }\r\n\r\n    const handleInput = (e) => {\r\n        const val = e.target.name;\r\n        if(val === 'username'){\r\n            setUsername(e.target.value);\r\n        }else{\r\n            setPassword(e.target.value);\r\n        }\r\n    }\r\n\r\n    const onLogin = (e) => {\r\n        e.preventDefault();\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        axios\r\n        .post('http://localhost:8000/api/token/', {username, password}, config)\r\n        .then(res => {\r\n            setIsAuthenticated(true);\r\n            localStorage.setItem('access', res.data.access);\r\n            localStorage.setItem('username', username);\r\n            setTokenError(false);\r\n        })\r\n        .catch(err => {\r\n            setTokenError(true);\r\n            setIsAuthenticated(false);\r\n        })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (isAuthenticated){\r\n            return setTimeout(() => {\r\n                history.push('/');\r\n            }, 500)\r\n        }\r\n    }, [isAuthenticated])\r\n\r\n\r\n    return (\r\n        <div className=\"py-8 flex h-full items-center\">\r\n            <form onSubmit={e => onLogin(e)} className=\"w-full\">\r\n                <div className=\"box block\">\r\n                    <p className=\"tracking-widest\">Welcome User!</p>\r\n                    <h1 className=\"text-4xl font-medium\">Login</h1>\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <div className=\"border border-gray-200 rounded-lg flex flex-col py-2 px-4 md:w-1/2\">\r\n                        <label htmlFor=\"\" className=\"text-sm\">Username</label>\r\n                        <input type=\"text\" name=\"username\" value={username} onChange={handleInput} className=\"h-8 py-2 inputField\" autoComplete=\"off\" required />\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    <div className=\"border border-gray-200 rounded-lg inline-flex flex-col py-2 px-4 md:w-1/2 relative\">\r\n                        <label htmlFor=\"\" className=\"text-sm\">Password</label>\r\n                        <input type=\"password\" name=\"password\" value={password} onChange={handleInput} className=\"h-8 py-2 inputField\" required />\r\n                        <i className={`far ${!passEye ? \"fa-eye\" : \"fa-eye-slash\"} pass-eye`} onClick={passEyeFunction}></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                    {(tokenError) ? (<div className=\"pb-2 text-red-500\">Incorrect username and password</div>): null}\r\n                    <button className=\"btn--primary md:w-1/2 rounded-lg\">Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"51","severity":1,"message":"52","line":4,"column":10,"nodeType":"53","messageId":"54","endLine":4,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":30,"column":8,"nodeType":"57","endLine":30,"endColumn":23,"suggestions":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"51","severity":1,"message":"63","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"64","line":1,"column":28,"nodeType":"53","messageId":"54","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"65","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"66","line":10,"column":11,"nodeType":"53","messageId":"54","endLine":10,"endColumn":22},{"ruleId":"51","severity":1,"message":"52","line":3,"column":10,"nodeType":"53","messageId":"54","endLine":3,"endColumn":18},{"ruleId":"55","severity":1,"message":"67","line":60,"column":8,"nodeType":"57","endLine":60,"endColumn":25,"suggestions":"68"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessToken' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["69"],"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Component' is defined but never used.","'accessToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["72"],{"desc":"73","fix":"74"},"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [accessToken, getProfilePic, username]",{"range":"77","text":"78"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"79","text":"80"},[1175,1190],"[accessToken, getProfilePic, username]",[1784,1801],"[history, isAuthenticated]"]